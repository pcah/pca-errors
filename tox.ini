[tox]
isolated_build = true
usedevelop = True
envlist =
  clean
  py36
  py37
  py38
  py39
  pypy3
  packaging

[gh-actions]
python =
    3.6: py36
    3.7: py37
    3.8: py38
    3.9: py39
    pypy-3.7: pypy3

[testenv]
whitelist_externals = poetry
setenv =
  PYTHONDONTWRITEBYTECODE=1
  PYTHONHASHSEED=0
  PYTHONWARNINGS=ignore
require_locked_deps = true
locked_deps =
    pytest
    pytest-cov
    mock
commands = poetry run pytest --cov --cov-append --cov-report term-missing --cov-report xml

[testenv:clean]
deps = coverage[toml]
skip_install = true
require_locked_deps = false
commands = coverage erase

[testenv:pypy3]
commands_pre =
  poetry export --dev --without-hashes -o .tox/requirements.txt
  pypy3 -m pip install -r .tox/requirements.txt
commands = pypy3 -m pytest

[testenv:packaging]
skip_install = True
deps = twine
require_locked_deps = false
commands =
    poetry build
    twine check dist/*

[flake8]
max-line-length = 119
ignore =
    # do not assign a lambda expression, use a def
    E731
    # black handles following errors:
    E101
    E111
    E114
    E115
    E116
    E117
    E121
    E122
    E123
    E124
    E125
    E126
    E127
    E128
    E129
    E131
    E133
    E2
    E3
    E5
    E701
    E702
    E703
    E704
    W1
    W2
    W3
    W503
    W504
exclude =
    # git directory
    .git,
    # python artifacts
    __pycache__,
    # test artifacts
    .tox,
    # built artifacts
    build,
    dist,
    .eggs,
